plugins {
    id 'java-library'
    id 'jacoco'
    id "com.diffplug.spotless" version "5.12.5"

    id 'maven-publish'
    id 'signing'
    id('io.github.gradle-nexus.publish-plugin') version '1.1.0'
}

group = 'so.dang.cool'
version = '1.1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.named('jacocoTestCoverageVerification') {
    dependsOn test
}

tasks.named('build') {
    dependsOn jacocoTestCoverageVerification
}

// Ignore warnings, especially for missing @param/@return, which is overkill.
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

tasks.named('jacocoTestCoverageVerification') {
    violationRules {
        rule {
            limit {
                // My greatest opponent is myself. If I can discover what my weaknesses are,
                // then I will be an even stronger fighter than I already am. -- Piccolo
                minimum = 1.00
            }
        }
    }
}

spotless {
    format 'misc', {
        target '*.gradle', '*.md', '.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }

    java {
        toggleOffOn('autofmt:off', 'autofmt:on')

        importOrder()
        removeUnusedImports()
        prettier(['prettier': '2.3.0', 'prettier-plugin-java': '1.1.1']).config(['parser': 'java', 'tabWidth': 4])
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = 'z'
            version = version

            from components.java

            pom {
                name = 'Z'
                description = 'Function combinators'
                url = 'https://github.com/hiljusti/z'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/hiljusti/z/blob/HEAD/LICENSE'
                    }
                }

                developers {
                    developer {
                        id = 'hiljusti'
                        name = 'J.R. Hill'
                        email = 'hiljusti@pm.me'
                        url = 'https://so.dang.cool'
                    }
                }

                contributors {
                    contributor {
                        name = 'Michael Ross'
                        url = 'https://github.com/madmikeross'
                        email = 'michael.s.ross@protonmail.com'
                    }
                }

                scm {
                    url = 'https://github.com/hiljusti/z'
                    connection = 'scm:git:git://github.com/hiljusti/z.git'
                    developerConnection = 'scm:git:git://github.com/hiljusti/z.git'
                }
            }
        }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir('repo')
        }
    }
}

signing {
    sign publishing.publications.maven
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}
